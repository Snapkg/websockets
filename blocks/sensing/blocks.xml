<blocks app="Snap! 9.0, https://snap.berkeley.edu" version="2">
  <block-definition s="new WebSocket ( %&apos;url&apos; )" type="reporter" category="sensing">
    <header></header>
    <code></code>
    <translations></translations>
    <inputs>
      <input type="%s">wss://ws.postman-echo.com/raw</input>
    </inputs>
    <script>
      <block s="doReport">
        <block s="evaluate">
          <block s="reportJSFunction">
            <list>
              <l>url</l>
            </list>
            <l>return new WebSocket(url)</l>
          </block>
          <list>
            <block var="url"/>
          </list>
        </block>
      </block>
    </script>
  </block-definition>
  <block-definition s="%&apos;ws&apos; .send ( %&apos;message&apos; )" type="command" category="sensing">
    <header></header>
    <code></code>
    <translations></translations>
    <inputs>
      <input type="%s">ws</input>
      <input type="%s"></input>
    </inputs>
    <script>
      <block s="doReport">
        <block s="evaluate">
          <block s="reportJSFunction">
            <list>
              <l>ws</l>
              <l>message</l>
            </list>
            <l>ws.send(message);</l>
          </block>
          <list>
            <block var="ws"/>
            <block var="message"/>
          </list>
        </block>
      </block>
    </script>
  </block-definition>
  <block-definition s="%&apos;ws&apos; .on %&apos;event&apos; do %&apos;callback&apos;" type="command" category="sensing">
    <header></header>
    <code></code>
    <translations></translations>
    <inputs>
      <input type="%s">ws</input>
      <input type="%s">message<options>message&#xD;open&#xD;close&#xD;error</options></input>
      <input type="%cmdRing"></input>
    </inputs>
    <script>
      <block s="doIf">
        <block s="reportVariadicEquals">
          <list>
            <block var="event"/>
            <l>open</l>
          </list>
        </block>
        <script>
          <block s="doRun">
            <block s="reportJSFunction">
              <list>
                <l>ws</l>
                <l>cb</l>
              </list>
              <l>ws.onopen = (event) =&gt; {&#xD;  console.log(event);&#xD;  const process = new Process(null,cb.receiver, null, true);&#xD;  process.initializeFor(cb, new List([event]));&#xD;  cb.receiver.parent.threads.processes.push(process);&#xD;};</l>
            </block>
            <list>
              <block var="ws"/>
              <block var="callback"/>
            </list>
          </block>
        </script>
        <list>
          <block s="reportVariadicEquals">
            <list>
              <block var="event"/>
              <l>close</l>
            </list>
          </block>
          <script>
            <block s="doRun">
              <block s="reportJSFunction">
                <list>
                  <l>ws</l>
                  <l>cb</l>
                </list>
                <l>ws.onclose = (event) =&gt; {&#xD;  console.log(event);&#xD;  const process = new Process(null,cb.receiver, null, true);&#xD;  process.initializeFor(cb, new List([event]));&#xD;  cb.receiver.parent.threads.processes.push(process);&#xD;};</l>
              </block>
              <list>
                <block var="ws"/>
                <block var="callback"/>
              </list>
            </block>
          </script>
          <block s="reportVariadicEquals">
            <list>
              <block var="event"/>
              <l>message</l>
            </list>
          </block>
          <script>
            <block s="doRun">
              <block s="reportJSFunction">
                <list>
                  <l>ws</l>
                  <l>cb</l>
                </list>
                <l>ws.onmessage = (event) =&gt; {&#xD;  console.log(event);&#xD;  const process = new Process(null,cb.receiver, null, true);&#xD;  process.initializeFor(cb, new List([event.data]));&#xD;  cb.receiver.parent.threads.processes.push(process);&#xD;};</l>
              </block>
              <list>
                <block var="ws"/>
                <block var="callback"/>
              </list>
            </block>
          </script>
          <block s="reportVariadicEquals">
            <list>
              <l></l>
              <l>error</l>
            </list>
          </block>
          <script></script>
        </list>
      </block>
    </script>
  </block-definition>
  <block-definition s="%&apos;ws&apos; .close" type="command" category="sensing">
    <header></header>
    <code></code>
    <translations></translations>
    <inputs>
      <input type="%s">ws</input>
    </inputs>
    <script>
      <block s="doRun">
        <block s="reportJSFunction">
          <list>
            <l>ws</l>
          </list>
          <l>ws.close();</l>
        </block>
        <list>
          <block var="ws"/>
        </list>
      </block>
    </script>
  </block-definition>
</blocks>